set resource access rights [read, write, ar1, ar2];

create policy class 'DAC';
create user attribute 'dac_users' assign to 'DAC';
create object attribute 'homes' assign to 'DAC';

create obligation 'create_dac_user' {
    create rule 'rule1'
    when any user
    performs 'create_user'
    do(evtCtx) {
        let username = evtCtx.name;
        let userAttr = concat(username, '_UA');
        let homeAttr = concat(username, '_home');

        create user attribute userAttr assign to 'dac_users';
        assign username to userUA;

        create object attribute homeAttr assign to 'homes';

        associate userAttr and homeAttr with access rights [read, write, *a];
    }
}

foreach branch in getChildren('branches') {
    associate branch and  with access rights [read, write];
}


const reader = [read, ar1, ar2];

associate ua1 and oa1 with access rights reader;

# function definition
function testFunc(string arg1, []string arg2, map[string]any arg3) string {
    # for loop on array
    foreach x in arg2 {
        create object attribute x assign to arg1;
    }

    # for loop on map
    foreach k, v in arg3 {
        create object attribute k assign to arg1;
    }
}

# function call
testFunc(
    'test',
    ['hello', 'world'],
    {'key1': 'value1', 'key2': ['value', '2'], 'key3': {'value': '3'}}
);
